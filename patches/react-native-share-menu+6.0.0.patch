diff --git a/node_modules/react-native-share-menu/android/build.gradle b/node_modules/react-native-share-menu/android/build.gradle
deleted file mode 100644
index 9557fdb..0000000
--- a/node_modules/react-native-share-menu/android/build.gradle
+++ /dev/null
@@ -1,24 +0,0 @@
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion 29
-    buildToolsVersion "29.0.2"
-
-    defaultConfig {
-        minSdkVersion 16
-        targetSdkVersion 29
-        versionCode 1
-        versionName "1.0"
-        ndk {
-            abiFilters "armeabi-v7a", "x86"
-        }
-    }
-    lintOptions {
-       warning 'InvalidPackage'
-    }
-}
-
-dependencies {
-    //noinspection GradleDynamicVersion
-    implementation 'com.facebook.react:react-native:+'
-}
diff --git a/node_modules/react-native-share-menu/android/src/main/AndroidManifest.xml b/node_modules/react-native-share-menu/android/src/main/AndroidManifest.xml
deleted file mode 100644
index 9c668c4..0000000
--- a/node_modules/react-native-share-menu/android/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.meedan">
-
-</manifest>
diff --git a/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuModule.java b/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuModule.java
deleted file mode 100644
index 09abd7b..0000000
--- a/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuModule.java
+++ /dev/null
@@ -1,166 +0,0 @@
-package com.meedan;
-
-import com.facebook.react.bridge.ActivityEventListener;
-import com.facebook.react.bridge.Arguments;
-import com.facebook.react.bridge.ReactApplicationContext;
-import com.facebook.react.bridge.ReactContext;
-import com.facebook.react.bridge.ReactContextBaseJavaModule;
-import com.facebook.react.bridge.ReactMethod;
-import com.facebook.react.bridge.Callback;
-import com.facebook.react.bridge.ReadableMap;
-import com.facebook.react.bridge.WritableArray;
-import com.facebook.react.bridge.WritableMap;
-import com.facebook.react.modules.core.DeviceEventManagerModule;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.net.Uri;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-
-import java.util.ArrayList;
-
-public class ShareMenuModule extends ReactContextBaseJavaModule implements ActivityEventListener {
-
-  // Events
-  final String NEW_SHARE_EVENT = "NewShareEvent";
-
-  // Keys
-  final String MIME_TYPE_KEY = "mimeType";
-  final String DATA_KEY = "data";
-
-  private ReactContext mReactContext;
-
-  public ShareMenuModule(ReactApplicationContext reactContext) {
-    super(reactContext);
-    mReactContext = reactContext;
-
-    mReactContext.addActivityEventListener(this);
-  }
-
-  @NonNull
-  @Override
-  public String getName() {
-    return "ShareMenu";
-  }
-
-  @Nullable
-  private ReadableMap extractShared(Intent intent)  {
-    String type = intent.getType();
-
-    if (type == null) {
-      return null;
-    }
-
-    String action = intent.getAction();
-
-    WritableMap data = Arguments.createMap();
-    data.putString(MIME_TYPE_KEY, type);
-
-    if (Intent.ACTION_SEND.equals(action)) {
-      if ("text/plain".equals(type)) {
-        data.putString(DATA_KEY, intent.getStringExtra(Intent.EXTRA_TEXT));
-        return data;
-      }
-
-      Uri fileUri = intent.getParcelableExtra(Intent.EXTRA_STREAM);
-      if (fileUri != null) {
-        data.putString(DATA_KEY, fileUri.toString());
-        return data;
-      }
-    } else if (Intent.ACTION_SEND_MULTIPLE.equals(action)) {
-      ArrayList<Uri> fileUris = intent.getParcelableArrayListExtra(Intent.EXTRA_STREAM);
-      if (fileUris != null) {
-        WritableArray uriArr = Arguments.createArray();
-        for (Uri uri : fileUris) {
-          uriArr.pushString(uri.toString());
-        }
-        data.putArray(DATA_KEY, uriArr);
-        return data;
-      }
-    }
-
-    return null;
-  }
-
-  @ReactMethod
-  public void getSharedText(Callback successCallback) {
-    Activity currentActivity = getCurrentActivity();
-
-    if (currentActivity == null) {
-      return;
-    }
-
-    // If this isn't the root activity then make sure it is
-    if (!currentActivity.isTaskRoot()) {
-      Intent newIntent = new Intent(currentActivity.getIntent());
-      newIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-      currentActivity.startActivity(newIntent);
-
-      ReadableMap shared = extractShared(newIntent);
-      successCallback.invoke(shared);
-      clearSharedText();
-      currentActivity.finish();
-      return;
-    }
-
-    Intent intent = currentActivity.getIntent();
-    
-    ReadableMap shared = extractShared(intent);
-    successCallback.invoke(shared);
-    clearSharedText();
-  }
-
-  private void dispatchEvent(ReadableMap shared) {
-    if (mReactContext == null || !mReactContext.hasActiveCatalystInstance()) {
-      return;
-    }
-
-    mReactContext
-            .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
-            .emit(NEW_SHARE_EVENT, shared);
-  }
-
-  public void clearSharedText() {
-    Activity mActivity = getCurrentActivity();
-    
-    if(mActivity == null) { return; }
-
-    Intent intent = mActivity.getIntent();
-    String type = intent.getType();
-
-    if (type == null) {
-      return;
-    }
-
-    if ("text/plain".equals(type)) {
-      intent.removeExtra(Intent.EXTRA_TEXT);
-      return;
-    }
-
-    intent.removeExtra(Intent.EXTRA_STREAM);
-  }
-
-  @Override
-  public void onActivityResult(Activity activity, int requestCode, int resultCode, Intent data) {
-    // DO nothing
-  }
-
-  @Override
-  public void onNewIntent(Intent intent) {
-    // Possibly received a new share while the app was already running
-
-    Activity currentActivity = getCurrentActivity();
-
-    if (currentActivity == null) {
-      return;
-    }
-
-    ReadableMap shared = extractShared(intent);
-    dispatchEvent(shared);
-
-    // Update intent in case the user calls `getSharedText` again
-    currentActivity.setIntent(intent);
-  }
-}
diff --git a/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuPackage.java b/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuPackage.java
deleted file mode 100644
index 3884e25..0000000
--- a/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuPackage.java
+++ /dev/null
@@ -1,28 +0,0 @@
-package com.meedan;
-
-import androidx.annotation.NonNull;
-
-import java.util.List;
-import java.util.ArrayList;
-import java.util.Collections;
-
-import com.facebook.react.ReactPackage;
-import com.facebook.react.bridge.NativeModule;
-import com.facebook.react.bridge.ReactApplicationContext;
-import com.facebook.react.uimanager.ViewManager;
-
-public class ShareMenuPackage implements ReactPackage {
-  @NonNull
-  @Override
-  public List<NativeModule> createNativeModules(@NonNull ReactApplicationContext reactContext) {
-    List<NativeModule> modules = new ArrayList<>();
-    modules.add(new ShareMenuModule(reactContext));
-    return modules;
-  }
-
-  @NonNull
-  @Override
-  public List<ViewManager> createViewManagers(@NonNull ReactApplicationContext reactContext) {
-    return Collections.emptyList();
-  }
-}
diff --git a/node_modules/react-native-share-menu/ios/Modules/ShareMenu.swift b/node_modules/react-native-share-menu/ios/Modules/ShareMenu.swift
index 74badda..7e844c8 100644
--- a/node_modules/react-native-share-menu/ios/Modules/ShareMenu.swift
+++ b/node_modules/react-native-share-menu/ios/Modules/ShareMenu.swift
@@ -100,25 +100,44 @@ class ShareMenu: RCTEventEmitter {
 
     @objc(getSharedText:)
     func getSharedText(callback: RCTResponseSenderBlock) {
-        var data = [DATA_KEY: sharedData] as [String: Any]
+        var data: [String: Any] = [DATA_KEY: sharedData ?? NSNull()]
 
         if let bundleId = Bundle.main.bundleIdentifier, let userDefaults = UserDefaults(suiteName: "group.\(bundleId)") {
-            data[EXTRA_DATA_KEY] = userDefaults.object(forKey: USER_DEFAULTS_EXTRA_DATA_KEY) as? [String: Any]
+            if let extraData = userDefaults.object(forKey: USER_DEFAULTS_EXTRA_DATA_KEY) as? [String: Any] {
+                        data[EXTRA_DATA_KEY] = extraData
+                    } else {
+                        data[EXTRA_DATA_KEY] = NSNull()
+                    }
         } else {
             print("Error: \(NO_APP_GROUP_ERROR)")
         }
+        // Remove keys with NSNull values
+        data = data.filter { !($0.value is NSNull) }
         
-        callback([data as Any])
+            // Check if data is empty
+            if data.isEmpty {
+                print("No valid data to share.")
+                return
+            }
+        
+        callback([data])
         sharedData = []
     }
     
     func dispatchEvent(with data: [[String:String]], and extraData: [String:Any]?) {
         guard hasListeners else { return }
 
-        var finalData = [DATA_KEY: data] as [String: Any]
-        if (extraData != nil) {
-            finalData[EXTRA_DATA_KEY] = extraData
-        }
+        // Flatten the array of dictionaries into a single dictionary
+            var finalData = data.reduce(into: [String: Any]()) { (result, dict) in
+                for (key, value) in dict {
+                    result[key] = value
+                }
+            }
+            
+        // Add extraData to finalData if extraData is not nil
+            if let extraData = extraData {
+                finalData[EXTRA_DATA_KEY] = extraData
+            }
         
         sendEvent(withName: NEW_SHARE_EVENT, body: finalData)
     }
diff --git a/node_modules/react-native-share-menu/ios/ReactShareViewController.swift b/node_modules/react-native-share-menu/ios/ReactShareViewController.swift
index f42bce6..ee36062 100644
--- a/node_modules/react-native-share-menu/ios/ReactShareViewController.swift
+++ b/node_modules/react-native-share-menu/ios/ReactShareViewController.swift
@@ -13,7 +13,7 @@ class ReactShareViewController: ShareViewController, RCTBridgeDelegate, ReactSha
   func sourceURL(for bridge: RCTBridge!) -> URL! {
 #if DEBUG
     return RCTBundleURLProvider.sharedSettings()?
-      .jsBundleURL(forBundleRoot: "index.share", fallbackResource: nil)
+      .jsBundleURL(forBundleRoot: "index.share")
 #else
     return Bundle.main.url(forResource: "main", withExtension: "jsbundle")
 #endif
diff --git a/node_modules/react-native-share-menu/ios/ShareMenuManager.m b/node_modules/react-native-share-menu/ios/ShareMenuManager.m
index 308ec99..d64822e 100644
--- a/node_modules/react-native-share-menu/ios/ShareMenuManager.m
+++ b/node_modules/react-native-share-menu/ios/ShareMenuManager.m
@@ -6,7 +6,7 @@
 //
 
 #import "ShareMenuManager.h"
-#import "RNShareMenu-Swift.h"
+#import <RNShareMenu/RNShareMenu-Swift.h>
 
 #import <React/RCTLinkingManager.h>
 
